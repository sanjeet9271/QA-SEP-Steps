Name,Status,Step,Expected Result,Priority,Labels,Objective,Precondition
POST /claims – minimal payload creates claim,Draft,Send POST /claims with minimal valid body,201 Created; response Content-Type is application/json,Medium,"Functional,Positive",Validate claim initiation succeeds with only required fields present,API base URL configured; authentication unspecified in spec (tests assume no auth). Content-Type: application/json
,,Validate response status and core body fields,"Body contains claimId (non-empty string), status=Initiated, productDetails (object); initiatedAt is ISO 8601 if present; warrantyInfo may be present or absent",,,,
POST /claims – full payload accepted,Draft,Send POST /claims with full valid body including dealerId and dealerName,201 Created,Medium,"Functional,Positive",Validate server accepts full dealer info and returns a valid claim,API base URL configured; authentication unspecified in spec (tests assume no auth). Content-Type: application/json
,,Validate response status and body fields,"Body contains claimId (non-empty string), status in [Draft, Initiated] with example Initiated; productDetails present; warrantyInfo optional",,,,
POST /claims – missing top-level required object (productInfo) rejected,Draft,Send POST /claims with body missing productInfo,400 Bad Request,High,"Functional,Negative,Data Validation",Ensure request without required top-level object is rejected,API base URL configured; authentication unspecified in spec (tests assume no auth)
,,Validate error response contract,"ErrorResponse includes errorCode (string), message (string), details (object allowed), timestamp (ISO 8601)",,,,
POST /claims – missing required nested object (userContext.dealerInfo) rejected,Draft,Send POST /claims with body missing userContext.dealerInfo,400 Bad Request,High,"Functional,Negative,Data Validation",Ensure request missing userContext.dealerInfo is rejected per story rule,API base URL configured; authentication unspecified in spec (tests assume no auth)
,,Validate error response contract,"ErrorResponse includes errorCode (string), message (string), details (object allowed), timestamp (ISO 8601)",,,,
POST /claims – invalid type for productInfo.serialNumber rejected,Draft,Send POST /claims where productInfo.serialNumber is a number instead of string,400 Bad Request,High,"Functional,Negative,Data Validation",Ensure server rejects payload with incorrect type for serialNumber,API base URL configured; authentication unspecified in spec (tests assume no auth)
,,Validate error response contract,"ErrorResponse includes errorCode (string), message (string), details (object allowed), timestamp (ISO 8601)",,,,
POST /claims – response schema: enums and formats,Draft,Send POST /claims with full valid body,201 Created,Medium,"Functional,Data Validation",Validate response fields adhere to declared enums and formats,API base URL configured; authentication unspecified in spec (tests assume no auth)
,,"Validate response: status is in [Draft, Initiated]; initiatedAt is ISO 8601 date-time when present; productDetails is object; warrantyInfo if present is object","status is one of [Draft, Initiated]; initiatedAt (if present) matches ISO 8601; productDetails is an object; warrantyInfo if present is an object",,,,
POST /claims – BVA: empty serialNumber rejected,Draft,Send POST /claims with serialNumber as empty string,400 Bad Request,Medium,"Functional,Negative,BVA",Validate boundary condition for serialNumber as empty string,API base URL configured; authentication unspecified in spec (tests assume no auth)
,,Validate error response contract,"ErrorResponse includes errorCode (string), message (string), details (object allowed), timestamp (ISO 8601)",,,,
